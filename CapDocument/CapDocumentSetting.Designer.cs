//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapDocument {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    public sealed partial class CapDocumentSetting : global::System.Configuration.ApplicationSettingsBase {
        
        private static CapDocumentSetting defaultInstance = ((CapDocumentSetting)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new CapDocumentSetting())));
        
        public static CapDocumentSetting Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<Folder><!-- cap裡一個<alert>可以對應多個<info>，所以用folder把<info>包起來，不同的<info>放在不同的folder -" +
            "->\r\n\t\t\t<name>info</name><!-- name固定為info -->\r\n\t\t\t<description><!-- 將<info>內的欄位都放" +
            "這裡 -->\r\n\t\t\t\t{0}\r\n\t\t\t</description>\r\n\t\t\t\r\n\t\t\t{1}\r\n\r\n\t\t\t{2}\t\r\n\t\t</Folder>")]
        public string kmlInfoTemplate {
            get {
                return ((string)(this["kmlInfoTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<Placemark><!-- 不同的<area>放在不同的Placemark -->				
					<name>{0}</name><!-- 放<areaDesc> -->
					<visibility>1</visibility>
					<styleUrl>#transBluePoly</styleUrl>
					{1}
					<description><!-- <area>裡除了<areaDesc> <polygon> <circle> <geocode>的其他欄位都放這裡 -->
						{2}						
					</description>
				</Placemark>
")]
        public string kmlAreaTemplate {
            get {
                return ((string)(this["kmlAreaTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""UTF-8""?>
<kml xmlns=""http://www.opengis.net/kml/2.2"">
	<Document>
		<Style id=""transBluePoly""><!-- 繪圖所需顏色請參見""CAP轉KML塗色說明"" -->
			<LineStyle>
				<width>1.5</width>
			</LineStyle>
			<PolyStyle>
				<color>7dff0000</color>
			</PolyStyle>
		</Style>
		<name>alert</name><!-- name固定為alert -->
		
		<description><!-- 將cap裡<alert>內的欄位都放這裡 -->
			{{alert}}
		</description>
		
		{{info}}
	</Document>
</kml>")]
        public string kmlTemplate {
            get {
                return ((string)(this["kmlTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<description><!-- 第一個<resource>內的欄位放這裡 -->\r\n\t\t\t\t\t{0}\t\r\n\t\t\t\t</description>")]
        public string kmlResourceTemplate {
            get {
                return ((string)(this["kmlResourceTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<Folder><!-- cap裡一個<info>可以對應多個<resource>，所以用folder把全部的<resource>都包起來，不同的<resourc" +
            "e>用description區分，但是都放在同一個folder -->\r\n\t\t\t\t<name>resource</name><!-- name固定為resour" +
            "ce -->\r\n\t\t\t\t{0}\r\n\t\t\t</Folder>\t\r\n")]
        public string kmlResourceScopeTemplate {
            get {
                return ((string)(this["kmlResourceScopeTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<Folder><!-- cap裡一個<info>可以對應多個<area>，所以用folder把所有的<area>包起來，不同的<area>用底下的Placemark區分，但是都放在同一個folder -->
				<name>area</name><!-- name固定為area -->
				
				{0}
				
				<!-- 若一個<area>內有多個<geocode>或<polygon>、<circle>，由於KML的規則在一個placemark內不能有多個polygon，所以要拆成多個placemark -->
				<!-- 承上，多個<geocode>或<polygon>、<circle>拆成多個placemark時，除了coordinates欄位內容不一樣之外，其他欄位內容都相同 -->
				
			</Folder>")]
        public string kmlAreaScopeTemplate {
            get {
                return ((string)(this["kmlAreaScopeTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<!-- 可多個CAP轉成一個 GeoRss-->
<!-- ""開發者自填""項目需有介面讓開發者輸入資訊 -->
<!-- 開發者需輸入自填項目，並提供CAP檔案(可以多個)，才能轉成一個GeoRss -->
<?xml version=""1.0"" encoding=""utf-8""?>
<feed xmlns=""http://www.w3.org/2005/Atom""
	  xmlns:cap=""urn:oasis:names:tc:emergency:cap:1.2""
      xmlns:georss=""http://www.georss.org/georss"" 
      xmlns:gml=""http://www.opengis.net/gml"">
	<id>{0}</id> <!-- 開發者自填 -->
	<title>{1}</title> <!-- 開發者自填 -->
	<updated>{2}</updated> <!-- 開發者自填 -->
	<author>
      <name>{3}</name> <!-- 開發者自填 -->
	</author>
	<link>{4}</link> <!-- 開發者自填 -->
	{5}
</feed>")]
        public string geoRssTemplate {
            get {
                return ((string)(this["geoRssTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<entry><!-- 第一個CAP --><!--每一個CAP各放在不同的entry-->
   		<id>{{identifier}}</id> <!-- <identifier> -->
		<title>{{event}}</title><!-- <event> -->
		<updated>{{sent}}</updated><!-- <sent> -->
		<author>
			<name>{{sender}}</name><!-- <sender> -->
		</author>
		<link  /><!-- 留白 -->
		<summary type=""html""><!-- <description> -->
			{{description}}
		</summary>
		<category term=""{{event}}"" /><!-- <event> -->
		<georss:where>
			<gml:MultiPolygon srsName=""EPSG:4326""><!-- 不管是不是同一個<info>，所有的<area>的<geocode>、<polygon>或<circle>都轉成polygon放在這一區 -->
		                 {{multipolygon}}
			</gml:MultiPolygon>
		</georss:where>	</entry>")]
        public string geoRssItemTemplate {
            get {
                return ((string)(this["geoRssItemTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<gml:polygonMember>
					<gml:Polygon>
						<gml:outerBoundaryIs>
							<gml:LinearRing>
								<gml:coordinates>
									{0}
								</gml:coordinates>	
							</gml:LinearRing>
						</gml:outerBoundaryIs>
					</gml:Polygon>
				</gml:polygonMember>")]
        public string geoRssItemPolygonTemplate {
            get {
                return ((string)(this["geoRssItemPolygonTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<gml:polygonMember>{0}</gml:polygonMember>")]
        public string geoRssItemGeoCodeTemplate {
            get {
                return ((string)(this["geoRssItemGeoCodeTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<Polygon><!-- 放<polygon> 或<geocode>、<circle>轉成的polygon -->
					    <tessellate>1</tessellate>
						<altitudeMode>absolute</altitudeMode>
						<outerBoundaryIs>
							<LinearRing>
								<coordinates><!-- 下列座標是舉例說明，實際需將cap裡的geocode或circle轉成polygon。高度的設定均為0(貼地表)) --> 	
								    {0}
								</coordinates>
							</LinearRing>
						</outerBoundaryIs>
					</Polygon>")]
        public string kmlAreaPolygonTemplate {
            get {
                return ((string)(this["kmlAreaPolygonTemplate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<alert xmlns=\"urn:oasis:names:tc:emergenc" +
            "y:cap:1.2\">    \r\n    {{alert}}\r\n\t{{info}}\r\n</alert>")]
        public string CapTemplate {
            get {
                return ((string)(this["CapTemplate"]));
            }
        }
    }
}
